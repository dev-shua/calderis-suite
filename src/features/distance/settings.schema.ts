// Uniquement le schéma de la feature Distance
export const distanceSettingsDef = {
  "distance.enabled": {
    name: "CS.Distance.Enabled.Label",
    hint: "CS.Distance.Enabled.Hint",
    scope: "world" as const,
    config: true,
    type: Boolean,
    default: true,
  },
  "distance.visibleTo": {
    name: "CS.Distance.VisibleTo.Label",
    hint: "Contrôle qui voit la distance au survol.",
    scope: "world" as const,
    config: false,
    type: String,
    default: "gmOwners",
    choices: {
      gm: "CS.Common.GM",
      gmOwners: "CS.Common.GMOwners",
      everyone: "CS.Common.Everyone",
    },
    section: "CS.Section.Display",
  },
  "distance.stepSource": {
    name: "CS.Distance.StepSource.Label",
    hint: "CS.Distance.StepSource.Hint",
    scope: "world" as const,
    config: false,
    type: String,
    default: "cell",
    choices: {
      none: "CS.Distance.StepSource.None",
      cell: "CS.Distance.StepSource.Cell",
      custom: "CS.Distance.StepSource.Custom",
    },
    section: "CS.Section.Display",
  },
  "distance.stepFraction": {
    name: "CS.Distance.StepFraction.Label",
    hint: "CS.Distance.StepFraction.Hint",
    scope: "world" as const,
    config: false,
    type: Number,
    default: 1,
    choices: {
      "1": "CS.Distance.StepFraction.One",
      "0.5": "CS.Distance.StepFraction.Half",
      "0.25": "CS.Distance.StepFraction.Quarter",
    },
    section: "CS.Section.Display",
  },
  "distance.customStep": {
    name: "CS.Distance.CustomStep.Label",
    hint: "CS.Distance.CustomStep.Hint",
    scope: "world" as const,
    config: false,
    type: Number,
    default: 1,
    range: { min: 0.1, max: 100, step: 0.1 },
    section: "CS.Section.Display",
  },
  "distance.roundingMode": {
    name: "CS.Distance.RoundingMode.Label",
    hint: "CS.Distance.RoundingMode.Hint",
    scope: "world" as const,
    config: false,
    type: String,
    default: "nearest",
    choices: {
      nearest: "CS.Distance.RoundingMode.Nearest",
      floor: "CS.Distance.RoundingMode.Floor",
      ceil: "CS.Distance.RoundingMode.Ceil",
    },
    section: "CS.Section.Display",
  },
  "distance.textSize": {
    name: "CS.Distance.TextSize.Label",
    hint: "CS.Distance.TextSize.Hint",
    scope: "client" as const,
    config: false,
    type: Number,
    default: 13,
    range: { min: 10, max: 24, step: 1 },
    section: "CS.Section.Display",
  },
  "distance.requireLOS": {
    name: "CS.Distance.RequireLOS.Label",
    hint: "CS.Distance.RequireLOS.Hint",
    scope: "world" as const,
    config: false,
    type: Boolean,
    default: false,
    section: "CS.Section.Calculation",
  },
} as const;

export type DistanceSettingsDef = typeof distanceSettingsDef;
